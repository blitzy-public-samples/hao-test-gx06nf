apiVersion: apps/v1
kind: Deployment
metadata:
  name: spec-management-api
  namespace: spec-management-prod
  labels:
    app: spec-management-api
    env: production
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8000"
    prometheus.io/path: "/metrics"

spec:
  # High availability with 2 replicas for 99.9% uptime
  replicas: 2
  
  selector:
    matchLabels:
      app: spec-management-api

  # Zero-downtime updates with rolling deployment
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0

  template:
    metadata:
      labels:
        app: spec-management-api
        env: production

    spec:
      # Pod-level security context
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000

      containers:
      - name: api
        image: gcr.io/PROJECT_ID/api:VERSION
        
        # Container-level security context
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL

        ports:
        - containerPort: 8000
          protocol: TCP

        # Production resource allocation as per technical specs
        resources:
          requests:
            cpu: "1"
            memory: "2Gi"
          limits:
            cpu: "2"
            memory: "4Gi"

        # Configuration and secrets mounting
        envFrom:
        - configMapRef:
            name: app-config
        - secretRef:
            name: app-secrets

        # Health monitoring for high availability
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3

        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 3

      # Pod anti-affinity for high availability
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - spec-management-api
              topologyKey: kubernetes.io/hostname